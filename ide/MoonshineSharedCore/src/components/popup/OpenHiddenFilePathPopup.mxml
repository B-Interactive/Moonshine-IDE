<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Prominic.NET, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Prominic.NET, Inc.
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   backgroundColor="0xf5f5f5"
				   width="350" minWidth="150" autoLayout="true"
				   xmlns:view="actionScripts.plugin.findreplace.view.*" xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
				   skinClass="components.skins.ResizableTitleWindowSkin" title="Go to Folder" creationComplete="onCreationCompletes()">
	<fx:Script>
		<![CDATA[
			import actionScripts.locator.IDEModel;

			import mx.utils.StringUtil;

			import spark.events.TextOperationEvent;

			public static const EVENT_PATH_SELECTED:String = "eventArbitraryPathSelected";

			public var isDirectory:Boolean;

			private var _path:Object;
			public function get path():Object
			{
				return _path;
			}

			private var model:IDEModel = IDEModel.getInstance();

			private function onCreationCompletes():void
			{
				txtFileName.setFocus();
			}

			protected function onOpenPath(event:MouseEvent):void
			{
				if (!btnOpen.enabled) return;

				if (isDirectory)
				{
					model.fileCore.browseForDirectory("Browse", onDirectorySelected, null, txtFileName.text);
				}
				else
				{
					model.fileCore.browseForOpen("Browse File", onDirectorySelected, null, null, txtFileName.text);
				}
			}
			
			protected function onPathValueChanged(event:TextOperationEvent):void
			{
				if (StringUtil.trim(txtFileName.text).length != 0)
				{
					btnOpen.enabled = model.fileCore.isPathExists(txtFileName.text);
					txtFileName.errorString = btnOpen.enabled ? null : "Path does not exists.";
				}
			}

			private function onDirectorySelected(file:Object):void
			{
				_path = file;
				txtFileName.text = _path.nativePath;

				dispatchEvent(new Event(EVENT_PATH_SELECTED));
				closeThis();
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" paddingLeft="12" paddingBottom="10" paddingTop="9" paddingRight="13"
			  verticalAlign="middle">
		<view:PromptTextInput id="txtFileName"
							  prompt="Enter path value" width="100%" styleName="textInput" restrict="0-9A-Za-z_.\-/ "
							  change="onPathValueChanged(event)" enter="onOpenPath(null)"/>
	</s:VGroup>
	
	<resizableTitleWindow:controlBarContent>
		<s:Button id="btnOpen"
				  label="Open Path"
				  styleName="darkButton" enabled="false"
				  click="onOpenPath(event)"/>
	</resizableTitleWindow:controlBarContent>
</resizableTitleWindow:ResizableTitleWindow>