<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) 2016-present Prominic.NET, Inc.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="500" autoLayout="true" title="Define a Device"
			   close="onCloseWindow(event)" creationComplete="onCreationCompletes(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.utils.StringUtil;
			import mx.validators.Validator;
			
			import actionScripts.events.GeneralEvent;
			import actionScripts.valueObjects.MobileDeviceVO;
			
			public var editedDevice:MobileDeviceVO;
			
			/**
			 * On this close button clicked
			 */
			protected function onCloseWindow(event:CloseEvent):void
			{
				PopUpManager.removePopUp(this);
			}
			
			protected function onCreate(event:MouseEvent):void
			{
				var tmpArr: Array = new Array(nValidator, wValidator, hValidator);
				if (Validator.validateAll(tmpArr).length == 0)
				{
					if (!editedDevice) editedDevice = new MobileDeviceVO(null);
					
					editedDevice.name = txtLabel.text;
					editedDevice.type = (cmbType.selectedIndex == 0) ? MobileDeviceVO.AND : MobileDeviceVO.IOS;
					editedDevice.dpi = String(txtDPI.text);
					
					var normalSize:String = txtNWidth.text +"x"+ txtNHeight.text;
					normalSize += ":"+ ((StringUtil.trim(txtFWidth.text).length != 0 && StringUtil.trim(txtFHeight.text).length != 0) ? txtFWidth.text +"x"+ txtFHeight.text : normalSize);
					editedDevice.key = normalSize;
					
					dispatchEvent(new GeneralEvent(GeneralEvent.DONE, editedDevice));
					onCloseWindow(null);
				}
			}
			
			protected function onCreationCompletes(event:FlexEvent):void
			{
				if (editedDevice)
				{
					var splitSize:Array = editedDevice.key.split(":");
					
					txtNWidth.text = splitSize[0].split("x")[0];
					txtNHeight.text = splitSize[0].split("x")[1];
					txtFWidth.text = splitSize[1].split("x")[0];
					txtFHeight.text = splitSize[1].split("x")[1];
					
					txtLabel.text = editedDevice.name;
					cmbType.selectedIndex = (editedDevice.type == MobileDeviceVO.AND) ? 0 : 1;
					txtDPI.text = editedDevice.dpi;
					btnCreate.label = "Update";
					btnCreate.enabled = true;
				}
			}
			
			protected function onTypesCompletes(event:FlexEvent):void
			{
				cmbType.textInput.editable = cmbType.textInput.editable = false;
				cmbType.selectedIndex = 0;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:StringValidator id="nValidator" source="{txtLabel}" property="text" trigger="{btnCreate}" triggerEvent="click"/>
		<mx:StringValidator id="wValidator" source="{txtNWidth}" property="text" trigger="{btnCreate}" triggerEvent="click"/>
		<mx:StringValidator id="hValidator" source="{txtNHeight}" property="text" trigger="{btnCreate}" triggerEvent="click"/>
	</fx:Declarations>
	
	<s:BorderContainer width="100%" height="100%" borderVisible="false">
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		<s:backgroundFill>
			<s:SolidColor color="0xe0e0e0"/>
		</s:backgroundFill>
		<s:Form width="100%" height="100%">
			<s:layout>
				<s:FormLayout gap="-12"/>
			</s:layout>
			<s:FormItem label="Name" required="true">
				<s:TextInput id="txtLabel"
							 width="100%"/>
			</s:FormItem>
			<s:FormItem label="Type">
				<s:ComboBox id="cmbType"
							width="100%" alternatingItemColors="[#FFFFFF, #FFFFFF]" selectionColor="#cccccc" rollOverColor="#eeeeee"
							selectedIndex="0" creationComplete="onTypesCompletes(event)">
					<s:dataProvider>
						<s:ArrayList>
							<fx:String>Android</fx:String>
							<fx:String>iOS</fx:String>
						</s:ArrayList>
					</s:dataProvider>
				</s:ComboBox>
			</s:FormItem>
			<s:FormItem label="Normal width:height" required="true">
				<s:HGroup width="100%"
						  verticalAlign="middle">
					<s:TextInput id="txtNWidth"
								 width="100%" restrict="0-9"/>
					<s:Label text=":"/>
					<s:TextInput id="txtNHeight"
								 width="100%" restrict="0-9"/>
				</s:HGroup>
			</s:FormItem>
			<s:FormItem label="Fullscreen width:height">
				<s:HGroup width="100%"
						  verticalAlign="middle">
					<s:TextInput id="txtFWidth"
								 width="100%" restrict="0-9"/>
					<s:Label text=":"/>
					<s:TextInput id="txtFHeight"
								 width="100%" restrict="0-9"/>
				</s:HGroup>
			</s:FormItem>
			<s:FormItem label="Dots Per Inch">
				<s:TextInput id="txtDPI"
							 width="100%" text="72" restrict="0-9"/>
			</s:FormItem>
			<s:FormItem>
				<s:Button id="btnCreate" 
						  label="Create"
						  click="onCreate(event)"/>
			</s:FormItem>
		</s:Form>
	</s:BorderContainer>
</s:TitleWindow>