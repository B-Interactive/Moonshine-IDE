<?xml version="1.0"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) 2016-present Prominic.NET, Inc.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<newfile:NewMXMLFilePopup xmlns:fx="http://ns.adobe.com/mxml/2009"
                          xmlns:newfile="components.popup.newFile.*"
						  creationComplete="onWindowCompletes(event)">
    <fx:Script><![CDATA[
		import mx.events.FlexEvent;
		
		import actionScripts.events.GlobalEventDispatcher;
		import actionScripts.events.NewFileEvent;
		import actionScripts.events.RefreshTreeEvent;
		import actionScripts.extResources.com.validator.ValidatorType;
		import actionScripts.factory.FileLocation;
		import actionScripts.plugin.templating.TemplatingHelper;
		import actionScripts.utils.SimpleValidator;
		import actionScripts.valueObjects.ConstantsCoreVO;
		
		public var fromTemplate:FileLocation;
		private var dispatcher:GlobalEventDispatcher = GlobalEventDispatcher.getInstance();
		
		override protected function onCreateButton(event:MouseEvent):void
		{
			// validation check for Enter key
			if (!isSubmitButtonEnabled) return;
			
			// validation 2
			var validateArr:Array = new Array(new ValidatorType(sValidator, txtDestination, "Source Package"));
			if (SimpleValidator.validate(validateArr))
			{
				var tmpEvent:NewFileEvent = new NewFileEvent(NewFileEvent.EVENT_NEW_FILE, null, fromTemplate, wrapperOfFolderLocation);
				tmpEvent.ofProject = wrapperBelongToProject;
				tmpEvent.fileName = txtFileName.text;
				tmpEvent.fileExtension = extensionLabel.text.substr(1, extensionLabel.text.length);
				dispatchEvent(tmpEvent);

				syncFormFile(tmpEvent.fileName,tmpEvent.fileExtension,wrapperBelongToProject.folderLocation);
				
				doBeforeExit();
				super.closeThis();
			}
		}

		private function syncFormFile(fileName:String,fileExtension:String,folderLocation:FileLocation):void
		{
			var targetFolder:String=folderLocation.fileBridge.nativePath;
			var original_form:FileLocation =  folderLocation.resolvePath("src"+folderLocation.fileBridge.separator +"main"+folderLocation.fileBridge.separator+"visualeditor"+folderLocation.fileBridge.separator+fileName+".dve");
			if (original_form.fileBridge.exists)
			{
				var newFormFile:FileLocation =  folderLocation.resolvePath("nsfs"+folderLocation.fileBridge.separator+"nsf-moonshine"+folderLocation.fileBridge.separator+"odp"+folderLocation.fileBridge.separator+"Forms"+folderLocation.fileBridge.separator+fileName + ".form"); 
				original_form.fileBridge.copyTo(newFormFile, true); 
				dispatcher.dispatchEvent(new RefreshTreeEvent(folderLocation));
			}
		}
		
		protected function onWindowCompletes(event:FlexEvent):void
		{
			componentTemplates = null;
			if (fromTemplate == ConstantsCoreVO.TEMPLATE_ODP_FORMBUILDER_FILE)
			{
				title = "New Form Builder DXL File";
				createdFileExtension = ".dfb";
			}
			else if (fromTemplate == ConstantsCoreVO.TEMPLATE_ODP_VISUALEDITOR_FILE)
			{
				title = "New Visual Editor DXL File";
				createdFileExtension = ".dve";
			}
		}
		
	]]></fx:Script>
</newfile:NewMXMLFilePopup>
