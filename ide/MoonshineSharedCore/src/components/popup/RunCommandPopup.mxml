<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) 2016-present Prominic.NET, Inc.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   backgroundColor="0xf5f5f5"
				   width="350" minWidth="150" autoLayout="true"
				   xmlns:view="actionScripts.plugin.findreplace.view.*" xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
				   skinClass="components.skins.ResizableTitleWindowSkin" title="Run Custom Command"
				   creationComplete="onCreationCompletes(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			import actionScripts.interfaces.ICustomCommandRunProvider;
			import actionScripts.plugin.build.vo.BuildActionVO;
			
			[Bindable] private var _commands:ArrayCollection;
			public function set commands(value:Array):void
			{
				if (value)
				{
					_commands = new ArrayCollection(value);
				}
			}
			
			[Bindable] public var executableNameToDisplay:String;
			[Bindable] public var selectedCommand:BuildActionVO;
			
			public var origin:ICustomCommandRunProvider;
			
			protected function onCreationCompletes(event:FlexEvent):void
			{
				if (selectedCommand)
				{
					cmbCommands.selectedItem = selectedCommand;
				}
			}
			
			protected function onRunButton(event:MouseEvent):void
			{
				if (origin)
				{
					origin.runOrUpdate(selectedCommand);
				}
				
				super.closeThis();
			}
			
			private function onCommandChange(event:IndexChangeEvent):void
			{
				// in case user create a new command
				if (cmbCommands.selectedItem is String)
				{
					selectedCommand = new BuildActionVO("Custom Command", cmbCommands.textInput.text);
					_commands.addItem(selectedCommand);
					cmbCommands.callLater(function():void
					{
						cmbCommands.selectedItem = selectedCommand;
					});
					
				}
				else
				{
					selectedCommand = cmbCommands.selectedItem;
				}
			}
			
			protected function cmbCommands_keyUpHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.TAB || event.keyCode == Keyboard.ENTER)
				{
					onCommandChange(null);
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
	</fx:Declarations>
	
	<s:VGroup width="100%" height="100%" paddingLeft="12" paddingBottom="10" paddingTop="9" paddingRight="13"
			  verticalAlign="middle">
		<s:HGroup width="100%"
				  verticalAlign="middle">
			<s:Label id="lblExecutableName" 
					 text="{executableNameToDisplay}"
					 fontStyle="italic" fontWeight="bold"/>
			<s:ComboBox id="cmbCommands" 
						width="100%"
						dataProvider="{_commands}" labelField="action"
						styleName="multiLineList"
						focusEnabled="false" height="26"
						change="onCommandChange(event)" tabEnabled="true" keyUp="cmbCommands_keyUpHandler(event)"
						creationComplete="cmbCommands.textInput.editable=true; cmbCommands.textInput.styleName='textInput'; cmbCommands.textInput.setFocus()"/>
		</s:HGroup>
		<!--<s:HGroup width="100%"
				  verticalAlign="middle">
			<s:Spacer width="{lblExecutableName.width}"/>
			<view:PromptTextInput id="txtName"
								  width="100%" text="{selectedCommand.actionName}"
								  styleName="textInput" prompt="Action Name"/>
		</s:HGroup>-->
	</s:VGroup>
	
	<resizableTitleWindow:controlBarContent>
		<s:Button label="Run"
				  styleName="darkButton"
				  click="onRunButton(event)"/>
	</resizableTitleWindow:controlBarContent>
</resizableTitleWindow:ResizableTitleWindow>