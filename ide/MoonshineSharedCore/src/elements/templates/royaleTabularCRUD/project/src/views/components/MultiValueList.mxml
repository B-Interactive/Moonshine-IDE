<?xml version="1.0" encoding="utf-8"?>
<j:Card xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:j="library://ns.apache.org/royale/jewel" xmlns:controls="view.controls.*"
		  xmlns:js="library://ns.apache.org/royale/basic" 
		  xmlns:html="library://ns.apache.org/royale/html"
		  itemsVerticalAlign="itemsCenter" itemsHorizontalAlign="itemsCenter" gap="2"
		  initComplete="onCreationCompletes(event)">
	<fx:Script>
		<![CDATA[
			import org.apache.royale.collections.ArrayList;
			import org.apache.royale.events.Event;
			import org.apache.royale.events.MouseEvent;
			
			private var _items:ArrayList = new ArrayList([]); 
			[Bindable]
			public function get items():ArrayList
			{
				return _items;
			}
			public function set items(value:ArrayList):void
			{
				_items = value;
			}
			
			private var editingItem:Object;
			
			private function toggleFormView(show:Boolean):void
			{
				if (show)
				{
					this.buttonsGroup.visible = false;
					this.addItemGroup.visible = true;
				}
				else
				{
					this.buttonsGroup.visible = true;
					this.addItemGroup.visible = false;
				}
			}

			private function onAddButtonClicked():void
			{
				editingItem = null;
				toggleFormView(true);
			}
			
			private function onAddItemCancelled():void
			{
				toggleFormView(false);
			}
			
			private function onCreationCompletes(event:Event):void
			{
				this.addItemForm.addEventListener("valid", onAddItemFormValid);
			}
			
			private function onAddItemFormValid(event:Event):void
			{
				if (editingItem) 
				{
					items.setItemAt(this.txtItemTitle.text, items.getItemIndex(editingItem));
				}
				else
				{
					items.addItem(this.txtItemTitle.text);
				}
				
				this.txtItemTitle.text = null;
				toggleFormView(false);
			}
			
			private function onModifyButtonClicked():void
			{
				editingItem = this.multivalueList.selectedItem;
				toggleFormView(true);
				this.txtItemTitle.text = this.multivalueList.selectedItem as String;
			}
			
			private function onRemoveButtonClicked():void
			{
				items.removeItem(this.multivalueList.selectedItem);
				this.multivalueList.selectedIndex = -1;
			}
			
		]]>
	</fx:Script>
	<j:beads>
		<js:ContainerDataBinding />
	</j:beads>
	
	<j:List localId="multivalueList"
			percentWidth="100" dataProvider="{items}" minHeight="100">
		<j:beads>
			<j:RemoveAllItemRendererForArrayListData/>
		</j:beads>
	</j:List>
	
	<j:HGroup localId="buttonsGroup" 
			  percentWidth="100" itemsHorizontalAlign="itemsRight" gap="2">
		<j:Button text="Add" click="onAddButtonClicked()"/>
		<j:Button text="Modify" click="onModifyButtonClicked()">
			<j:beads>
				<j:Disabled disabled="{!multivalueList.selectedItem}"/>
			</j:beads>
		</j:Button>
		<j:Button text="Remove" click="onRemoveButtonClicked()">
			<j:beads>
				<j:Disabled disabled="{!multivalueList.selectedItem}"/>
			</j:beads>
		</j:Button>
	</j:HGroup>
	
	<j:VGroup localId="addItemGroup" 
			  percentWidth="100" itemsHorizontalAlign="itemsRight" gap="2"
			  visible="false">
		<j:Form localId="addItemForm">
			<j:beads>
				<j:FormValidator id="formValidator" trigger="{btnSubmit}" triggerEvent="click" 
								 requiredFieldError="At least one field has a validation error. Please correct the problem and submit again."/>
			</j:beads>
			<j:FormItem label="Item Title:" required="true"
						className="horizontalContentShrinkFormItem">
				<j:TextInput localId="txtItemTitle" percentWidth="100">
					<j:beads>
						<j:StringValidator required="1"/>
					</j:beads>
				</j:TextInput>
			</j:FormItem>
		</j:Form>
		<j:HGroup itemsHorizontalAlign="itemsRight" gap="2" percentWidth="100">
			<j:Button id="btnSubmit" text="Update to List"/>
			<j:Button text="Cancel" click="onAddItemCancelled()"/>
		</j:HGroup>
	</j:VGroup>
</j:Card>