<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) STARTcloud, Inc. 2015-2022. All rights reserved.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%"
		  paddingLeft="15" paddingTop="5" paddingRight="15" paddingBottom="5"
		  visible="true" creationComplete="init()">
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.utils.StringUtil;
			
			import actionScripts.events.GeneralEvent;
			import actionScripts.plugin.templating.settings.TemplateSetting;
			
			public static const EVENT_RESET:String = "reset";
			public static const EVENT_MODIFY:String = "modify";
			public static const EVENT_REMOVE:String = "delete";
			
			[Bindable] public var setting:TemplateSetting;
			[Bindable] public var showReset:Boolean;
			[Bindable] public var showRemove:Boolean;
			
			[Bindable] private var isProject:Boolean;
			
			private function init():void
			{
				if (setting.originalTemplate == null)
				{
					showRemove = true;
				}
				else if (setting.customTemplate && setting.customTemplate.fileBridge.exists)
				{
					showReset = true;
				}
			}
			
			public function reset():void
			{
				dispatchEvent(new Event(EVENT_RESET));
				showReset = false;
			}
			
			public function remove():void
			{
				dispatchEvent(new Event(EVENT_REMOVE));
				showReset = false;
			}
			
			private function modify():void
			{
				dispatchEvent(new Event(EVENT_MODIFY));
				showReset = true;
			}
			
			private function rename():void
			{
				isProject = setting.customTemplate.fileBridge.isDirectory;
				txtRename.prompt = isProject ? "Enter a name" : "Enter a name including an extension";
				
				// show the file name cutting down .template word
				var lastIndex:int = setting.label.indexOf(".template");
				txtRename.text = (lastIndex != -1) ? setting.label.substring(0, lastIndex) : setting.label;
				
				lblName.visible = false;
				txtRename.visible = true;
				btnsRegular.includeInLayout = btnsRegular.visible = false;
				btnsRename.includeInLayout = btnsRename.visible = true;
				
				txtRename.callLater(txtRename.setFocus);
			}
			
			protected function renameDone(event:MouseEvent):void
			{
				if (StringUtil.trim(txtRename.text).length == 0)
				{
					Alert.show("Please enter a valid file "+ (isProject ? "name." : "name including an extension."), "Error!");
					return;
				}
				
				if (!isProject)
				{
					var tmpArr:Array = txtRename.text.split(".");
					if (tmpArr.length < 2 || StringUtil.trim(tmpArr[tmpArr.length - 1]).length == 0)
					{
						Alert.show("Please enter a valid file name including an extension.", "Error!");
						return;
					}
				}
				
				dispatchEvent(new GeneralEvent(GeneralEvent.DONE, txtRename.text));
				
				// when done
				renameCancel(null);
			}
			
			protected function renameCancel(event:MouseEvent):void
			{
				lblName.visible = true;
				txtRename.visible = false;
				btnsRegular.includeInLayout = btnsRegular.visible = true;
				btnsRename.includeInLayout = btnsRename.visible = false;
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%" verticalAlign="middle">
		<s:Group autoLayout="true" width="100%">
			<s:TextInput id="txtRename"
						 styleName="uiTextSettingsValue"
						 borderVisible="false" width="100%"
						 contentBackgroundAlpha="1" contentBackgroundColor="#FFFFFF"
						 unfocusedTextSelectionColor="#a8c6ee"
						 focusAlpha="0" paddingLeft="0"
						 visible="false"/>
			<s:Label id="lblName" 
					 styleName="uiTextSettingsValue"
					 text="{setting.label}"
					 verticalCenter="0"/>
		</s:Group>
		
		<mx:Spacer width="100"/>
		
		<s:HGroup id="btnsRename"
				  includeInLayout="false" visible="false">
			<s:Button
				label="Done"
				styleName="lightButton"
				click="renameDone(event)"/>
			<s:Button 
				label="Cancel"
				styleName="lightButton"
				click="renameCancel(event)"/>
		</s:HGroup>
		<s:HGroup id="btnsRegular" verticalAlign="middle">
			<s:Image source="@Embed('/elements/images/icoRecycle.png')"
					 buttonMode="true" visible="{showRemove}"
					 click="remove()"/>
			<s:Button 
				label="Reset"
				styleName="lightButton"
				visible="{showReset &amp;&amp; !showRemove}"
				includeInLayout="{showReset &amp;&amp; !showRemove}"
				click="reset()" />
			<s:Button
				label="Rename"
				styleName="lightButton"
				visible="{showRemove}" includeInLayout="{showRemove}"
				click="rename()"
				/>
			<s:Button 
				label="Modify"
				styleName="lightButton"
				click="modify()"/>
		</s:HGroup>
	</s:HGroup>
	
</s:VGroup>