<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
// 
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
										   xmlns:s="library://ns.adobe.com/flex/spark"
			                               xmlns:view="actionScripts.plugin.findreplace.view.*"
										   xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
										   width="500" autoLayout="true" minWidth="500"
										   backgroundColor="0xf5f5f5" defaultButton="{findButton}"
										   title.findAndReplace="Find/Replace" title.findOnly="Find"
										   skinClass="components.skins.ResizableTitleWindowSkin"
                                           creationComplete="onSearchViewCreationComplete(event)"
										   currentState="findAndReplace">
	<resizableTitleWindow:states>
		<s:State name="findAndReplace"/>
		<s:State name="findOnly"/>
	</resizableTitleWindow:states>
	<fx:Script>
		<![CDATA[
			import actionScripts.plugin.findreplace.FindReplacePlugin;

			import elements.skins.DarkButtonSkin;

			import mx.events.FlexEvent;

			[Bindable] public var initialSearchString:String = "";
			
			private function find():void
			{
				if (rbDirection.selectedIndex == 0)
				{
					dispatchEvent(new Event(FindReplacePlugin.EVENT_FIND_NEXT));
				}
				else
				{
					dispatchEvent(new Event(FindReplacePlugin.EVENT_FIND_PREV));
				}
			}
			
			private function replaceOne(isFindNext:Boolean=false):void
			{
				dispatchEvent( new Event(FindReplacePlugin.EVENT_REPLACE_ONE) );
				if (isFindNext) find();
			}
			
			private function replaceAll():void
			{
				dispatchEvent( new Event(FindReplacePlugin.EVENT_REPLACE_ALL) );
			}
			
			private function focusInput():void
			{
				findInput.setFocus();
				findInput.selectRange(findInput.text.length, findInput.text.length);
			}

			private function onSearchViewCreationComplete(event:FlexEvent):void
			{
				findButton.setStyle("skinClass", DarkButtonSkin);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RadioButtonGroup id="rbDirection"/>
	</fx:Declarations>
	
	<s:VGroup width="100%" height="100%"
			  paddingLeft="12" paddingBottom="12" paddingTop="9" paddingRight="12">
		<view:StatusTextInput
			id="findInput"
			prompt="Find"
			width="100%"
			styleName="textInputStatus"
			creationComplete="{focusInput()}"
			tabIndex="1"
			text="{initialSearchString}"/>
		<view:PromptTextInput
			id="replaceInput" 
			prompt="Replace"
			width="100%"
			styleName="textInput"
			enter="replaceOne(true)"
			tabIndex="2" includeIn="findAndReplace"/>
		<s:HGroup width="100%"
				  verticalAlign="middle" gap="4">
			<s:CheckBox
				id="optionMatchCase"
				label="Match case" />
			<s:CheckBox
				id="optionRegExp"
				label="RegExp"/>
			<s:CheckBox
				id="optionEscapeChars" 
				label="Escape chars"/>
		</s:HGroup>
		<s:HGroup width="100%"
				  verticalAlign="middle" gap="4">
			<s:RadioButton group="{rbDirection}"
						   label="Forward" selected="true"/>
			<s:RadioButton group="{rbDirection}"
						   label="Backward"/>
		</s:HGroup>
	</s:VGroup>
	
	<resizableTitleWindow:controlBarContent>
		<s:Button
				label="Replace/Find"
				styleName="darkButton"
				click="replaceOne(true)" includeIn="findAndReplace"/>
		<s:Button
				label="Replace All"
				styleName="darkButton"
				click="replaceAll()" includeIn="findAndReplace"/>
		<s:Spacer width="100%"/>
		<s:Button id="findButton"
				  label="Find" fontFamily="DejaVuSans" fontSize="12"
				  click="find()" />
	</resizableTitleWindow:controlBarContent>
</resizableTitleWindow:ResizableTitleWindow>