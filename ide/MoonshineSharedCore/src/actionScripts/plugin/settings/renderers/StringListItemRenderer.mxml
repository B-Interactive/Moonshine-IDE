<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) STARTcloud, Inc. 2015-2022. All rights reserved.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:ItemRenderer
	xmlns:fx="http://ns.adobe.com/mxml/2009"
  	xmlns:s="library://ns.adobe.com/flex/spark"
  	width="100%"
  	autoDrawBackground="false">

	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.events.TextOperationEvent;
			
			import actionScripts.factory.FileLocation;
			import actionScripts.plugin.settings.vo.StringListItemVO;
			import actionScripts.plugin.settings.renderers.StringListRenderer;
			
			public static const EVENT_REMOVE_ITEM:String = "removeItem";
			public static const EVENT_MANUAL_UPDATE:String = "manualUpdate";
			
			[Bindable] public var showRemove:Boolean = true;
			[Bindable] public var restrict:String = null;
						
			protected function onPathManualChange(event:TextOperationEvent):void
			{
				if (data)
				{
					var item:StringListItemVO = data as StringListItemVO;
					item.string = stringInput.text;
				}
			}

			override public function set data(value:Object):void
			{
				var changed:Boolean = this.data != value;
				super.data = value;
				if(changed && value)
				{
					var item:StringListItemVO = data as StringListItemVO;
					if(item.string == null || item.string.length == 0)
					{
						this.stringInput.setFocus();
					}
				}
			}
			
		]]>
	</fx:Script>

	<s:HGroup 
		width="100%" 
		paddingLeft="15"
		verticalAlign="middle">
		<s:Image id="icoMainSourceFolder"
				 source="@Embed('/elements/images/icoSource.png')"
				 includeInLayout="false" visible="false"/>
		<s:TextInput id="stringInput"
					 width="100%"
					 styleName="uiTextSettingsValue"
					 height="100%"
					 borderVisible="false"
					 contentBackgroundAlpha="0"
					 focusAlpha="0"
					 text="{data ? (data as StringListItemVO).string : StringListRenderer.NOT_SET_STRING_MESSAGE}"
					 restrict="{restrict}"
					 change="onPathManualChange(event)"/>
		
		<s:Spacer width="10"/>
	
		<s:Button 
			width="20"
			label="â€“"
			styleName="lightButtonTight"
			visible="{showRemove}"
			click="{dispatchEvent(new Event(EVENT_REMOVE_ITEM, true))}"
			/>
	</s:HGroup>
	
</s:ItemRenderer>