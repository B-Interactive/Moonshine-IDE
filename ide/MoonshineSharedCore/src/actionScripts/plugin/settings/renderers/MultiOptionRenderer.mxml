<?xml version = "1.0" encoding = "utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) STARTcloud, Inc. 2015-2022. All rights reserved.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:HGroup 
	xmlns:fx="http://ns.adobe.com/mxml/2009"
 	xmlns:s="library://ns.adobe.com/flex/spark"
 	xmlns:mx="library://ns.adobe.com/flex/mx"
	width="100%"
	paddingLeft="15"
	paddingTop="15"
	paddingRight="15"
	paddingBottom="15">
	
    <fx:Declarations>
        <s:RadioButtonGroup id="radioButtonGroup"
                             change="commitValue()">
        </s:RadioButtonGroup>
    </fx:Declarations>
    
    <fx:Script>
        <![CDATA[

        import mx.collections.ArrayCollection;
			
			import spark.components.RadioButton;
			
			import actionScripts.plugin.settings.vo.MultiOptionSetting;
			import actionScripts.plugin.settings.vo.NameValuePair;
			
			[Bindable]
			public var setting:MultiOptionSetting;
			
			[Bindable]
			private var _options:ArrayCollection;
			
			public function set options(v:Vector.<NameValuePair>):void
			{
				var opts:ArrayCollection = new ArrayCollection();
				var nvp:NameValuePair;
				
				for each(nvp in v){
					opts.addItem(nvp);
				} 
				_options = opts;
			}
			
			private function itemRendererFunction_handler(item:Object):ClassFactory
			{	
				var nvp:NameValuePair = item as NameValuePair;
				if(!nvp) return null;
				
				var props:Object = {
						label : nvp.name,
						value : nvp.value,
						group : radioButtonGroup,
						selected : setting.value == nvp.value
				};
				var factory:ClassFactory = new ClassFactory(RadioButton);
				factory.properties = props;
				return factory;
			}
			
			private function commitValue():void
			{
				setting.value = radioButtonGroup.selectedValue;
				if (setting.isCommitOnChange) setting.commitChanges();
                dispatchEvent(new Event(MultiOptionSetting.EVENT_MULTIOPTION_CHANGE, setting.value));
			}
			
		]]>
    </fx:Script>

    <s:Label styleName="uiTextSettingsLabel"
              text="{setting.label}"/>

    <mx:Spacer width = "100%"/>
    
    <s:DataGroup
    	styleName="uiTextSettingsValue"
    	itemRendererFunction="itemRendererFunction_handler"
        dataProvider="{_options}">
        <s:layout>
            <s:VerticalLayout/>
        </s:layout>
    </s:DataGroup>

</s:HGroup>