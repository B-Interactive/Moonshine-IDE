<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
// 
////////////////////////////////////////////////////////////////////////////////
-->
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
			xmlns:s="library://ns.adobe.com/flex/spark"
			xmlns:mx="library://ns.adobe.com/flex/mx"
			width="100%"
			paddingLeft="15"
			paddingTop="15"
			paddingRight="15"
			paddingBottom="15"
			creationComplete="onMainClassRendererCreationComplete(event)">
	<fx:Script>
		<![CDATA[
		import actionScripts.plugin.settings.vo.MainClassSetting;

		import mx.events.FlexEvent;

		import actionScripts.factory.FileLocation;
		import actionScripts.locator.IDEModel;
		import actionScripts.plugin.settings.vo.AbstractSetting;

		[Bindable]
		public var setting:MainClassSetting;

		[Bindable]
		private var model:IDEModel = IDEModel.getInstance();

		private var message:String;
		private var messageType:String;

		public function setMessage(value:String, type:String):void
		{
			this.message = value;
			this.messageType = type;

			if(!lblMessage)
			{
				return;
			}
			if(!this.message)
			{
				lblMessage.text = "";
				lblMessage.includeInLayout = lblMessage.visible = false;
			}

			lblMessage.includeInLayout = lblMessage.visible = true;
			switch (type)
			{
				case AbstractSetting.MESSAGE_CRITICAL:
					lblMessage.setStyle("color", 0xff0000);
					break;
				case AbstractSetting.MESSAGE_IMPORTANT:
					lblMessage.setStyle("color", 0x0099ff);
					break;
				default:
					lblMessage.setStyle("color", 0x666666);
					break;
			}

			lblMessage.text = value;
		}

		private function selectPath():void
		{
			var location:FileLocation = new FileLocation(setting.mainClassOrFolderPath);
			if (!location.fileBridge.isDirectory)
			{
				location = location.fileBridge.parent;
			}

			model.fileCore.browseForOpen("Select file", openFile, null, setting.fileFilters, location.fileBridge.nativePath);
		}

		private function clearPath():void
		{
			setting.stringValue = "";
			lblMessage.text = "";
		}

		private function openFile(fileDir:Object):void
		{
			setting.stringValue = new FileLocation(fileDir.nativePath).fileBridge.nameWithoutExtension;
			setting.provider["mainClassPath"] = fileDir.nativePath;

			setting.dispatchEvent(new Event(AbstractSetting.MAINCLASS_SELECTED));

		}

		protected function onMainClassRendererCreationComplete(event:FlexEvent):void
		{
			setting.dispatchEvent(new Event(AbstractSetting.MAINCLASS_SELECTED));

			// validate path
			if(setting.stringValue)
			{
				if(!(new FileLocation(setting.stringValue).fileBridge.exists))
				{
					setMessage("Path is not accessible.", AbstractSetting.MESSAGE_CRITICAL);
				}
			} else
			{
				setMessage(this.message, this.messageType);
			}
		}
		]]>
	</fx:Script>

	<s:HGroup width="100%">
		<s:Label styleName="uiTextSettingsLabel"
				 text="{setting.label}" />

		<mx:Spacer width="100%"/>

		<s:Button label="Clear"
				  skinClass="{LinkButtonSkin}"
				  click="clearPath()" />

		<s:Button label="Change"
				  skinClass="{LinkButtonSkin}"
				  click="selectPath()" />
	</s:HGroup>

	<s:Label id="lblValue"
			 styleName="uiTextSettingsValue"
			 paddingTop="10" width="98%"
			 text="{setting.stringValue? setting.stringValue : 'Not Set' }" />
	<s:Label id="lblMessage"
			 styleName="uiTextSettingsLabel" color="#666666" width="100%" maxDisplayedLines="3"
			 fontSize="12" includeInLayout="false" visible="false"/>
</s:VGroup>