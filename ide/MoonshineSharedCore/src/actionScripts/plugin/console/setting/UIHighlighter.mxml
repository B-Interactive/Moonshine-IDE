<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) STARTcloud, Inc. 2015-2022. All rights reserved.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" height="100%"
	backgroundAlpha="0.2"
	backgroundColor="0x0"
	creationComplete="init()">
	
	<mx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			
			public var comp:UIComponent;
			public var considerAlphaWhoWasOnceAsHandsomeAsYou:Boolean = true;
			
			public function show():void
			{
				FlexGlobals.topLevelApplication.addElement(this);	
			}
			
			public function remove():void
			{
				FlexGlobals.topLevelApplication.removeElement(this);
				comp = null;
			}
			
			private function init():void
			{
				this.cacheAsBitmap = true;
				masker.cacheAsBitmap = true;

				
				var upperLeft:Point = comp.parent.localToGlobal( new Point(comp.x, comp.y) );
				var lowerRight:Point = comp.parent.localToGlobal( new Point(comp.x+comp.width, comp.y+comp.height) );
				
				maskerMask.x = upperLeft.x;
				maskerMask.y = upperLeft.y;
				maskerMask.width = lowerRight.x - upperLeft.x;
				maskerMask.height = lowerRight.y - upperLeft.y;
				
				maskerMask.graphics.clear();
				
				if (considerAlphaWhoWasOnceAsHandsomeAsYou)
				{
					var bmp:BitmapData = new BitmapData(comp.width, comp.height, true, 0x00000000);
					bmp.draw(comp);
									
					maskerMask.graphics.beginBitmapFill(bmp);
					maskerMask.graphics.drawRect(0, 0, bmp.width, bmp.height);
					maskerMask.graphics.endFill();
				}
				else
				{
					maskerMask.graphics.beginFill(0x0, 1);
					maskerMask.graphics.drawRect(0, 0, comp.width, comp.height);
					maskerMask.graphics.endFill();
				}				
				this.mask = masker;
			}
			
		]]>
	</mx:Script>
	
	<!-- BRING ON THE CANVAS! -->
	
	<mx:Canvas id="masker"
		width="100%" height="100%"
		backgroundAlpha="1"
		backgroundColor="0xFF0000"
		blendMode="layer">
		
			<mx:Canvas id="maskerMask"
				backgroundAlpha="1"
				blendMode="erase">
				
				<mx:filters>
					<mx:GlowFilter alpha="1"  blurX="8" blurY="8" color="0x0" quality="2" />
					<mx:GlowFilter alpha="1"  blurX="24" blurY="24" color="0x0" quality="2" />
				</mx:filters>
				
			</mx:Canvas>
				
			
	</mx:Canvas>
	
</mx:Canvas>
