<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) STARTcloud, Inc. 2015-2022. All rights reserved.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
			   paddingBottom="20" paddingLeft="20" paddingRight="20" paddingTop="20">
	<fx:Metadata>
		[Event(name="INSTALL_FINISH", type="flash.events.Event")]
		[Event(name="INSTALL_CANCEL", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import actionScripts.factory.FileLocation;
			import actionScripts.locator.IDEModel;
			import actionScripts.valueObjects.ConstantsCoreVO;
			
			import org.as3commons.asblocks.utils.FileUtil;
			
			public var selectedSDKDir:File;
			
			private var installerView:InstallApacheFlex;
			
			/**
			 * On creation completes
			 */
			public function initThis():void
			{
				var sdksFolder:File;
				
				// platformwise default folder path selection
				if (ConstantsCoreVO.IS_MACOS)
				{
					sdksFolder = File.userDirectory;
					
					var tmpPathSplit: Array = sdksFolder.nativePath.split(FileUtil.separator);
					tmpPathSplit.shift();
					
					sdksFolder = new File(FileUtil.separator + tmpPathSplit[0] + FileUtil.separator + tmpPathSplit[1] + FileUtil.separator + "Downloads");
					if (!sdksFolder.exists) sdksFolder = File.documentsDirectory;
				}
				else
				{
					sdksFolder = File.documentsDirectory;
				}
				
				installerView = new InstallApacheFlex();
				installerView.defaultInstallPathToSDK = sdksFolder;
				installerView.fileSeparator = FileUtil.separator;
				installerView.addEventListener("INSTALL_FINISH", onSDKSelected, false, 0, true);
				installerView.addEventListener("INSTALL_CANCEL", onSDKInstallCancelled, false, 0, true);
				installerView.addEventListener("BROWSE_FOR_SDK_DIR", onSDKDirBrowse, false, 0, true);
				addElement(installerView);
			}
			
			public function removeListeners():void
			{
				installerView.removeEventListener("INSTALL_FINISH", onSDKSelected);
				installerView.removeEventListener("INSTALL_CANCEL", onSDKInstallCancelled);
				installerView.removeEventListener("BROWSE_FOR_SDK_DIR", onSDKDirBrowse);
				if (installerView) removeElement(installerView);
				installerView = null;
			}
			
			/**
			 * On SDK downloaded and selected by the user
			 */
			private function onSDKSelected(event:Event):void
			{
				selectedSDKDir = InstallApacheFlex(event.target).flexHomeDir;
				removeListeners();
				dispatchEvent(event);
			}
			
			/**
			 * On SDK installation cancelled
			 */
			private function onSDKInstallCancelled(event:Event):void
			{
				removeListeners();
				dispatchEvent(event);
			}
			
			/**
			 * On SDK directory browse request
			 */
			private function onSDKDirBrowse(event:Event):void
			{
				var model:IDEModel = IDEModel.getInstance();
				model.fileCore.browseForDirectory("Select and permit", onSDKPathSelected, null, installerView.defaultInstallPathToSDK.nativePath);
			}
			
			private function onSDKPathSelected(fileDir:Object):void
			{
				installerView.flexSDKDirSelected(fileDir);
			}
			
		]]>
	</fx:Script>
</s:VGroup>