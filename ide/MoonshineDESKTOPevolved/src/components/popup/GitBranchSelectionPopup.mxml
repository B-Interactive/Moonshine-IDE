<?xml version="1.0" encoding="utf-8"?>
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 width="600" height="400" minWidth="300" minHeight="200"
		 skinClass="components.skins.ResizableTitleWindowSkin" xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
		 creationComplete="onCreationCompletes(event)">
	<fx:Script>
		<![CDATA[
		import actionScripts.events.GeneralEvent;
		import actionScripts.events.GlobalEventDispatcher;
			import actionScripts.plugins.git.commands.GetCurrentBranchCommand;
		import actionScripts.plugins.git.commands.GitSwitchBranchCommand;

		import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;

			[Bindable] public var isGitAvailable:Boolean;
			public var isSubmit:Boolean;

			[Bindable] private var branchCollection:ArrayCollection;
			private var dispatcher:GlobalEventDispatcher = GlobalEventDispatcher.getInstance();
			
			protected function onCreationCompletes(event:FlexEvent):void
			{
				dispatcher.addEventListener(GetCurrentBranchCommand.GIT_REMOTE_BRANCH_LIST_RECEIVED, onGitRemoteBranchListReceived, false, 0, true);
				new GitSwitchBranchCommand(GitSwitchBranchCommand.BRANCH_TYPE_LOCAL);
			}

			override protected function closeByCrossSign(event:Event):void
			{
				dispatcher.removeEventListener(GetCurrentBranchCommand.GIT_REMOTE_BRANCH_LIST_RECEIVED, onGitRemoteBranchListReceived);
				super.closeByCrossSign(event);
			}

			private function onTypeChanged(event:Event):void
			{
				branchCollection = null;
				if (rbgBranchTypes.selection == rbLocalBranch)
				{
					new GitSwitchBranchCommand(GitSwitchBranchCommand.BRANCH_TYPE_LOCAL);
				}
				else
				{
					new GitSwitchBranchCommand(GitSwitchBranchCommand.BRANCH_TYPE_REMOTE);
				}
			}

			private function onGitRemoteBranchListReceived(event:GeneralEvent):void
			{
				branchCollection = event.value as ArrayCollection;
			}
			
			private function onSubmit():void
			{
				if (lstBranches.selectedItem.isSelected)
				{
					Alert.show("Selected item is already set as current branch.", "Error!");
					return;
				}
				
				isSubmit = true;
				// for now - testing
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RadioButtonGroup id="rbgBranchTypes"
							change="onTypeChanged(event)"/>
	</fx:Declarations>
	
	<s:VGroup height="100%" width="100%" 
			  paddingLeft="12" paddingBottom="9" paddingTop="9" paddingRight="13">
		<s:Label text="Showing Branch Type:"/>
		<s:HGroup width="100%" verticalAlign="middle" paddingBottom="4">
			<s:RadioButton id="rbLocalBranch"
						   groupName="rbgBranchTypes"
						   label="Local Branches" selected="true"/>
			<s:RadioButton id="rbRemoteBranch"
						   groupName="rbgBranchTypes"
						   label="Remote Branches"/>
		</s:HGroup>
		<s:Label text="Select a branch to switch to:"/>
		<s:List id="lstBranches"
				width="100%" height="100%" styleName="multiLineList"
				dataProvider="{branchCollection}" labelField="data"
				requireSelection="true" doubleClickEnabled="true" doubleClick="onSubmit()">
			<s:itemRenderer>
				<fx:Component>
					<s:ItemRenderer width="100%" height="22">
						<fx:Script>
							<![CDATA[
								override public function set data(value:Object):void
								{
									if (value) 
									{
										super.data = value;
										labelDisplay.setStyle("fontWeight", data.isSelected ? "bold" : "normal");
										labelDisplay.setStyle("color", data.isSelected ? 0x33cc33 : 0xffffff);
										if (data.isSelected) labelDisplay.text = "* "+ labelDisplay.text;
									}
								}
								
							]]>
						</fx:Script>
						
						<s:Label id="labelDisplay" 
								 left="4" right="6" verticalCenter="0"/>
					</s:ItemRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:List>
		<s:Label text="You need Git installed on your system to continue."
				 width="100%" textAlign="center" color="0xff0000"
				 visible="{!isGitAvailable}" includeInLayout="{!isGitAvailable}"/>
	</s:VGroup>
	
	<resizableTitleWindow:controlBarContent>
		<s:Button id="btnCommit" label="Checkout Branch"
				  styleName="darkButton" click="onSubmit()"
				  enabled="{lstBranches.selectedItem}"/>
	</resizableTitleWindow:controlBarContent>
</resizableTitleWindow:ResizableTitleWindow>