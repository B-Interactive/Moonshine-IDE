<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) STARTcloud, Inc. 2015-2022. All rights reserved.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 width="500" minWidth="400" minHeight="100" autoLayout="true"
		 skinClass="components.skins.ResizableTitleWindowSkin" xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
		 xmlns:view="actionScripts.plugin.findreplace.view.*" xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="onCreationCompletes()">
	<fx:Script>
		<![CDATA[
		import actionScripts.events.GlobalEventDispatcher;
		import actionScripts.plugins.versionControl.event.VersionControlEvent;

		import flash.utils.escapeMultiByte;
			
			import mx.events.CloseEvent;
			import mx.validators.Validator;			
			import spark.utils.TextFlowUtil;
			import actionScripts.valueObjects.VersionControlTypes;
			
			public static const AUTH_SUBMITTED:String = "gitAuthenticationCompleted";
			
			[Bindable] public var isGitAvailable:Boolean;
			[Bindable] public var type:String;
			[Bindable] public var userName:String;
			
			public var userObject:Object;

			override protected function closeByCrossSign(event:Event):void
			{
				super.closeByCrossSign(event);
				GlobalEventDispatcher.getInstance().dispatchEvent(new VersionControlEvent(VersionControlEvent.REPOSITORY_AUTH_CANCELLED));
			}

			override protected function closeThis():void
			{
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE, true));
			}
			
			private function onCreationCompletes():void
			{
				if (userName) txtPassword.setFocus();
				else txtUser.setFocus();
				
				if (type == VersionControlTypes.GIT && isGitAvailable)
				{
					retUserMessage.includeInLayout = retUserMessage.visible = true;
					retUserMessage.textFlow = TextFlowUtil.importFromString("<p>Use a <a href='https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token'>Personal Authentication Token</a> instead of a password if you have two-factor authentication enabled on GitHub.</p>");
				}
			}
			
			private function onSubmit():void
			{
				var tmpArr : Array = new Array(eValidator, pValidator);
				if (Validator.validateAll(tmpArr).length == 0)
				{
					userObject = {userName:txtUser.text, password:txtPassword.text};
					userObject.save = cbSaveAuth.selected;

					dispatchEvent(new Event(AUTH_SUBMITTED));
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:StringValidator id="eValidator" source="{txtUser}" property="text" trigger="{btnCommit}" triggerEvent="click"/>
		<mx:StringValidator id="pValidator" source="{txtPassword}" property="text" trigger="{btnCommit}" triggerEvent="click"/>
	</fx:Declarations>
	
	<s:VGroup height="100%" width="100%" 
			  paddingLeft="12" paddingBottom="12" paddingTop="9" paddingRight="12">
		<view:PromptTextInput id="txtUser"
							  width="100%" styleName="textInput"
							  prompt="User Name" text="{userName}"/>
		<view:PromptTextInput id="txtPassword" 
							  prompt="Password" width="100%" styleName="textInput"
							  displayAsPassword="true" enter="onSubmit()"/>
		<s:RichEditableText id="retUserMessage"
							width="100%"
							editable="false" focusEnabled="false"
							fontSize="13" 
							includeInLayout="false" visible="false"/>
		<s:CheckBox id="cbSaveAuth"
					label="Save until Moonshine exits"/>
		<s:Label text="You need Git installed on your system to continue."
				 width="100%" textAlign="center" color="0xff0000"
				 includeInLayout="{type==VersionControlTypes.GIT &amp;&amp; !isGitAvailable}" visible="{type==VersionControlTypes.GIT &amp;&amp; !isGitAvailable}"/>
	</s:VGroup>
	
	<resizableTitleWindow:controlBarContent>
		<s:Button id="btnCommit" label="Submit"
				  styleName="darkButton" click="onSubmit()"
				  enabled="{isGitAvailable || type == VersionControlTypes.SVN}"/>
	</resizableTitleWindow:controlBarContent>
</resizableTitleWindow:ResizableTitleWindow>