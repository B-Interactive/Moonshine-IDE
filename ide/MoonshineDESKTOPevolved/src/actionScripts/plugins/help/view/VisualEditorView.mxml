<?xml version="1.0"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) 2016-present Prominic.NET, Inc.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:view="view.*" xmlns:containers="spark.containers.*"
          xmlns:tabnavigator="actionScripts.ui.tabNavigator.*">
    <s:states>
        <s:State name="flexVisualEditor"/>
        <s:State name="primeFacesVisualEditor" stateGroups="primeFaces"/>
        <s:State name="primeFacesPreviewStarting" stateGroups="primeFaces"/>
        <s:State name="dominoVisualEditor" stateGroups="domino"/>
    </s:states>
    <containers:Navigator id="viewStack" width="100%" height="100%" creationPolicy="all">
        <s:NavigatorContent label="Visual">
            <view:VisualEditor id="visualEditor" percentWidth="100" percentHeight="100" right="0" left="0"
                               visualEditorType.flexVisualEditor="{VisualEditorType.FLEX}"
                               visualEditorType.primeFaces="{VisualEditorType.PRIME_FACES}"
                            visualEditorType.domino="{VisualEditorType.DOMINO}"
                             />
        </s:NavigatorContent>
        <s:NavigatorContent label="Code">
            <s:Scroller width="100%" height="100%">
               <s:Group id="codeContentGroup" creationComplete="onContentGroupCreationComplete(event)">

               </s:Group>
            </s:Scroller>
        </s:NavigatorContent>
    </containers:Navigator>
    <s:Group percentWidth="100">
        <tabnavigator:TabBarWithScroller id="tabBar" dataProvider="{viewStack}"
                                         fontSize="11" fontFamily="_sans" color="0xEEEEEE"
                                         skinClass="components.skins.EditorTabBarSkin"
                                         cornerRadius="1" closeButtonVisible="false"
                                         change="onTabBarChange(event)" left="0"/>
        <s:ButtonBarButton
                  label.primeFacesVisualEditor="{resourceManager.getString('resources', 'VE_PREVIEW')}"
                  label.primeFacesPreviewStarting="{resourceManager.getString('resources', 'STARTING_PREVIEW')}"
                  enabled.primeFacesPreviewStarting="false" selected.primeFacesVisualEditor="false"
                  selected.primeFacesPreviewStarting="true"
                  right="0" buttonMode="true" includeIn="primeFaces"
                  skinClass="components.skins.StartStopButtonSkin"
                  click="onStartPreviewClick(event)"/>
    </s:Group>
    <fx:Script><![CDATA[
		import mx.events.FlexEvent;
		
		import spark.events.IndexChangeEvent;
		
		import actionScripts.valueObjects.ProjectVO;
		import actionScripts.plugins.help.view.events.VisualEditorViewChangeEvent;

        import utils.VisualEditorType;
        import mx.core.IVisualElement;

        private var _codeEditor:IVisualElement;

		[Bindable]
        public var visualEditorProject:ProjectVO;

        public function set codeEditor(value:IVisualElement):void
        {
            _codeEditor = value;
        }

        private function onContentGroupCreationComplete(event:FlexEvent):void
        {
            codeContentGroup.addElement(_codeEditor);
        }

        private function onTabBarChange(event:IndexChangeEvent):void
        {
            //Alert.show(event.newIndex);
            if (event.newIndex == 1)
            {
                //visualEditor.editingSurface.selectedItem = null;
				visualEditor.editingSurface.setResizerVisible(false);
                dispatchEvent(new VisualEditorViewChangeEvent(VisualEditorViewChangeEvent.CODE_CHANGE));
            }
			else
			{
				visualEditor.editingSurface.setResizerVisible(true);
			}
        }

        private function onStartPreviewClick(event:MouseEvent):void
        {
            dispatchEvent(new Event("startPreview"));
        }
		
	]]></fx:Script>
    <fx:Metadata>
        [Event(name="codeChange", type="actionScripts.plugins.help.view.events.VisualEditorViewChangeEvent")]
        [Event(name="startPreview", type="flash.events.Event")]
    </fx:Metadata>
</s:VGroup>
