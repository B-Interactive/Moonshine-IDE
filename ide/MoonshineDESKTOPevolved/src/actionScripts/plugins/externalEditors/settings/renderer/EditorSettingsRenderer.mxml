<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) 2016-present Prominic.NET, Inc.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%"
		  paddingLeft="15" paddingTop="15" paddingRight="15" paddingBottom="15"
		  visible="true" creationComplete="init()">
	
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import actionScripts.locator.IDEModel;
			import actionScripts.plugin.settings.renderers.LinkButtonSkin;
			import actionScripts.plugins.externalEditors.settings.ExternalEditorSetting;
			
			[Bindable] public var setting:ExternalEditorSetting;
			
			private function init():void
			{
				
			}
			
			private function clear():void
			{
				setting.editor.installPath = null;
				setting.stringValue = null;
			}
			
			private function browse():void
			{
				if (setting.editor.installPath && setting.editor.installPath.exists)
				{
					IDEModel.getInstance().fileCore.nativePath = setting.editor.installPath.nativePath;
				}
				
				IDEModel.getInstance().fileCore.browseForOpen("Select executable", onExecutableSelected, null, ["*.app;*.exe"]);
			}
			
			protected function onExecutableSelected(file:File):void
			{
				setting.stringValue = file.nativePath;
				// do not use 'file' directly as that instance can be
				// changed by other activities
				setting.editor.installPath = new File(file.nativePath);
			}
			
			private function remove():void
			{
				setting.dispatchEvent(new Event(ExternalEditorSetting.EVENT_REMOVE));
			}
			
			private function modify():void
			{
				setting.dispatchEvent(new Event(ExternalEditorSetting.EVENT_MODIFY));
			}
			
			private function openWebsite():void
			{
				navigateToURL(new URLRequest(setting.editor.website));
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%">
		<s:Label styleName="uiTextSettingsLabel"
				 text="{setting.editor.title}" />
		<mx:Spacer width="100%"/>
		<s:Button label="Clear"
				  skinClass="{LinkButtonSkin}"
				  click="clear()"/>
		<s:Button label="Change"
				  skinClass="{LinkButtonSkin}"
				  click="browse()"/>
		<s:Button label="Download"
				  skinClass="{LinkButtonSkin}"
				  visible="{setting.editor.isMoonshineDefault}" includeInLayout="{setting.editor.isMoonshineDefault}"
				  click="openWebsite()"/>
		<s:Button label="Modify"
				  skinClass="{LinkButtonSkin}"
				  visible="{!setting.editor.isMoonshineDefault}" includeInLayout="{!setting.editor.isMoonshineDefault}"
				  click="modify()"/>
		<s:Button label="Remove"
				  skinClass="{LinkButtonSkin}"
				  visible="{!setting.editor.isMoonshineDefault}" includeInLayout="{!setting.editor.isMoonshineDefault}"
				  click="remove()"/>
	</s:HGroup>
	
	<s:HGroup width="100%" verticalAlign="middle">
		<s:Label id="lblValue"
				 styleName="uiTextSettingsValue"
				 paddingTop="10" width="100%"
				 text="{setting.stringValue? setting.stringValue : 'Not Set'}"/>
		<s:CheckBox toolTip="Enable"
					enabled="{setting.editor.isValid}" selected="@{setting.editor.isEnabled}"/>
	</s:HGroup>
	
	<s:Label id="lblMessage"
			 styleName="uiTextSettingsLabel" color="0xff0000" width="100%" maxDisplayedLines="3"
			 fontSize="12" 
			 includeInLayout="{setting.editor.installPath &amp;&amp; !setting.editor.installPath.exists}" 
			 visible="{setting.editor.installPath &amp;&amp; !setting.editor.installPath.exists}"
			 text="Path is not accessible."/>
</s:VGroup>